import pytest
from src.db.commands.user import CreateUserCommand, UpdateUserCommand, DeleteUserCommand
from src.db.interfaces.interfaces import CommandInterface
from .user import CommandHandler


@pytest.mark.asyncio
async def test_command_handler_handle_message():
    command = CreateUserCommand(
        name='John', age=30, email='john@example.com'
    )
    
    result = await CommandHandler.handle_message(command)
    assert result == True

    command = UpdateUserCommand(
        user_id=7, name='John Doe'
    )
    result = await CommandHandler.handle_message(command)
    assert result == True

    command = DeleteUserCommand(user_id=7)
    result = await CommandHandler.handle_message(command)
    assert result == True

    class InvalidCommand(CommandInterface):
        def __sql__(self):
            return ''

    invalid_command = InvalidCommand()
    with pytest.raises(ValueError):
        await CommandHandler.handle_message(invalid_command)
